<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from hyl.urdf.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="hyl" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- This argument allows us to load joint sensors that measure the internal wrenches -->
  <!-- This argument allows us to load STL mesh files instead of DAE ones -->
  <!-- The following included files set up definitions of parts of the robot body -->
  <!-- standard distances -->
  <!-- Inertial values -->
  <!-- Trunk -->
  <!-- Hip assembly leg -->
  <!-- Upper leg -->
  <!-- Lower leg -->
  <!-- Materials -->
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="grey">
    <color rgba="0.45 0.45 0.45 1"/>
  </material>
  <!-- HyL support -->
  <!-- Things that are needed only for Gazebo (not the physical robot). These include sensor and controller plugin specifications -->
  <!-- =============================== Support =============================== -->
  <!-- The xacro macro xacro:hyl_support contains: support of HyL -->
  <!-- HyL Leg -->
  <!-- Things that are needed only for Gazebo (not the physical robot). These include sensor and controller plugin specifications -->
  <!-- ================================== Leg ================================== -->
  <!-- The xacro macro xacro:hyl_leg contains: slider upper and lower leg -->
  <!-- generic simulator_gazebo plugins for starting mechanism control, ros time -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_controller_manager">
      <robotNamespace>/hyl</robotNamespace>
      <robotSimType>dls_gazebo_interface/DLSHWSim</robotSimType>
      <controlPeriod>0.004</controlPeriod>
    </plugin>
  </gazebo>
  <!-- Now we can start using the macros included above to define the actual HyQ -->
  <!-- The first use of a macro. This one was defined in trunk.urdf.xacro above.
A macro like this will expand to a set of link and joint definitions, and to additional
Gazebo-related extensions (sensor plugins, etc). The macro takes an argument, name,
that equals "base", and uses it to generate names for its component links and joints
(e.g., base_link). The included origin block is also an argument to the macro. By convention,
the origin block defines where the component is w.r.t its parent (in this case the parent
is the world frame). For more, see http://www.ros.org/wiki/xacro -->
  <!-- support -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0.025 0.85"/>
  </joint>
  <link name="base_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.025 -0.27"/>
      <geometry>
        <box size="0.12 0.045 1.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 -0.025 -0.27"/>
      <geometry>
        <box size="0.12 0.045 1.15"/>
      </geometry>
      <material name="blue">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
  </link>
  <!-- leg -->
  <!-- Joints -->
  <!-- Slider joint -->
  <joint name="slider_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="trunk"/>
    <limit effort="0.0" lower="-0.60" upper="0.5" velocity="100.0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <!-- Hip assembly joint -->
  <joint name="haa_joint" type="fixed">
    <origin rpy="0 1.57079632679 3.14159265359" xyz="0 0.13 0"/>
    <parent link="trunk"/>
    <child link="hipassembly"/>
  </joint>
  <!-- Upper leg joint -->
  <joint name="hfe_joint" type="revolute">
    <origin rpy="1.57079632679 0 0" xyz="0.08 0 0"/>
    <parent link="hipassembly"/>
    <child link="upperleg"/>
    <limit effort="150.0" lower="-0.872664625997" upper="1.2217304764" velocity="12.0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0" friction="0"/>
    <safety_controller k_position="100" k_velocity="100" soft_lower_limit="-0.872664625997" soft_upper_limit="1.2217304764"/>
  </joint>
  <!-- Lower leg joint -->
  <joint name="kfe_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.35 0 0"/>
    <parent link="upperleg"/>
    <child link="lowerleg"/>
    <limit effort="150.0" lower="-2.44346095279" upper="-0.349065850399" velocity="12.0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0" friction="0"/>
    <safety_controller k_position="100" k_velocity="100" soft_lower_limit="-2.44346095279" soft_upper_limit="-0.349065850399"/>
  </joint>
  <!-- Foot joint -->
  <joint name="foot_joint" type="fixed">
    <origin rpy="1.57079632679 0 -1.57079632679" xyz="0.341 0 0"/>
    <parent link="lowerleg"/>
    <child link="foot"/>
  </joint>
  <!-- Links -->
  <!-- Trunk link -->
  <link name="trunk">
    <inertial>
      <origin xyz="-0.08315 0.06849 -0.00654"/>
      <mass value="7.982"/>
      <inertia ixx="0.037131" ixy="0.028543" ixz="-0.00097" iyy="0.087473" iyz="0.003392" izz="0.112496"/>
    </inertial>
    <visual>
      <origin rpy="-1.57079632679 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/trunk.stl" scale="1 1 1"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57079632679 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/trunk.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- Hip assembly link -->
  <link name="hipassembly">
    <inertial>
      <origin xyz="0.0 0.0 0.0"/>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/hipassembly.stl" scale="1 1 1"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/hipassembly.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- Upper leg link -->
  <link name="upperleg">
    <inertial>
      <origin xyz="0.14925 -0.02996 -5e-05"/>
      <mass value="2.06218"/>
      <inertia ixx="0.00464" ixy="-0.00718" ixz="-1e-05" iyy="0.07216" iyz="-1e-05" izz="0.07463"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/upperleg.stl" scale="1 1 1"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/upperleg.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- Lower leg link -->
  <link name="lowerleg">
    <inertial>
      <origin xyz="0.12185 0.00058 -0.00012"/>
      <mass value="0.80669"/>
      <inertia ixx="0.00042" ixy="0.0" ixz="0.0" iyy="0.02202" iyz="0.0" izz="0.02183"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/lowerleg.stl" scale="1 1 1"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://hyl/meshes/leg/lowerleg.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- Foot link -->
  <link name="foot">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02185"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02185"/>
      </geometry>
    </collision>
  </link>
  <!-- Extensions -->
  <!-- Slider -->
  <transmission name="slider_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="slider_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="slider_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Upper leg -->
  <transmission name="hfe_upper_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="hfe_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="hfe_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Lower leg -->
  <transmission name="kfe_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="kfe_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="kfe_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="slider_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <gazebo reference="kfe_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <gazebo reference="hfe_joint">
    <provideFeedback>true</provideFeedback>
  </gazebo>
  <gazebo reference="foot">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <fdir1>1 0 0</fdir1>
    <maxVel>100.0</maxVel>
    <minDepth>0.0</minDepth>
  </gazebo>
  <gazebo reference="foot">
    <selfCollide>false</selfCollide>
    <sensor name="foot_contact_sensor" type="contact">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <contact>
        <collision>foot_collision</collision>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="foot_gazebo_ros_bumper_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>100.0</updateRate>
        <bumperTopicName>/hyl/foot_force</bumperTopicName>
        <frameName>world</frameName>
      </plugin>
    </sensor>
  </gazebo>
</robot>
